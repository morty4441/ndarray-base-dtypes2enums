{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolveEnum = require( '@stdlib/ndarray-base-dtype-resolve-enum' );\n\n\n// MAIN //\n\n/**\n* Resolves a list of data type enumeration constants.\n*\n* ## Notes\n*\n* -   If the function is unable to resolve an enumeration constant for a provided data type, the corresponding element in the returned array will be `null`.\n*\n* @param {StringArray} dtypes - list of data types\n* @returns {Array} results\n*\n* @example\n* var out = dtypes2enums( [ 'float32', 'float64' ] );\n* // returns [...]\n*\n* @example\n* var out = dtypes2enums( [ 'foo', 'bar' ] );\n* // returns [ null, null ]\n*/\nfunction dtypes2enums( dtypes ) {\n\tvar out;\n\tvar i;\n\n\tout = [];\n\tfor ( i = 0; i < dtypes.length; i++ ) {\n\t\tout.push( resolveEnum( dtypes[ i ] ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = dtypes2enums;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Resolve a list of data type enumeration constants.\n*\n* @module @stdlib/ndarray-base-dtypes2enums\n*\n* @example\n* var dtypes2enums = require( '@stdlib/ndarray-base-dtypes2enums' );\n*\n* var out = dtypes2enums( [ 'float32', 'float64' ] );\n* // returns [...]\n*\n* out = dtypes2enums( [ 'foo', 'bar' ] );\n* // returns [ null, null ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAc,QAAS,yCAA0C,EAuBrE,SAASC,EAAcC,EAAS,CAC/B,IAAIC,EACAC,EAGJ,IADAD,EAAM,CAAC,EACDC,EAAI,EAAGA,EAAIF,EAAO,OAAQE,IAC/BD,EAAI,KAAMH,EAAaE,EAAQE,CAAE,CAAE,CAAE,EAEtC,OAAOD,CACR,CAKAJ,EAAO,QAAUE,ICtBjB,IAAII,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "resolveEnum", "dtypes2enums", "dtypes", "out", "i", "main"]
}
